name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1

jobs:
  rust-checks:
    name: Rust Checks
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt, clippy

      - name: Cache Rust dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            server/target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('server/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Check Rust formatting
        run: cd server && cargo fmt --all -- --check

      - name: Run Clippy
        run: cd server && cargo clippy --all-targets --all-features -- -D warnings

      - name: Run Rust tests
        run: cd server && cargo test --verbose

      - name: Build server
        run: cd server && cargo build --verbose

  node-checks:
    name: Node.js Checks
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: client/package-lock.json

      - name: Install client dependencies
        run: cd client && npm ci

      - name: Run TypeScript type checking
        run: cd client && npm run type-check

      - name: Build client
        run: cd client && npm run build

      - name: Run client linting (if available)
        run: |
          cd client
          if npm run lint --if-present; then
            echo "Linting completed"
          else
            echo "No lint script found, skipping"
          fi

  integration-test:
    name: Integration Test (Placeholder)
    runs-on: ubuntu-latest
    needs: [rust-checks, node-checks]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            server/target/
            client/node_modules/
          key: ${{ runner.os }}-integration-${{ hashFiles('server/Cargo.lock', 'client/package-lock.json') }}

      - name: Build server
        run: cd server && cargo build

      - name: Install client dependencies
        run: cd client && npm ci

      - name: Build client
        run: cd client && npm run build

      - name: Basic smoke test
        run: |
          echo "Placeholder for integration tests"
          echo "TODO: Start server in background, run client build, test WebSocket connection"
          # Future: Start server, run basic connectivity tests, shut down
